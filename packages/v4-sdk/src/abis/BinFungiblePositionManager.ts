export const BinFungiblePositionManagerAbi = [
  {
    type: 'constructor',
    inputs: [
      { name: '_vault', type: 'address', internalType: 'contract IVault' },
      { name: '_poolManager', type: 'address', internalType: 'contract IBinPoolManager' },
      { name: '_WETH9', type: 'address', internalType: 'address' },
    ],
    stateMutability: 'nonpayable',
  },
  { type: 'receive', stateMutability: 'payable' },
  {
    type: 'function',
    name: 'WETH9',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'address' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'addLiquidity',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct IBinFungiblePositionManager.AddLiquidityParams',
        components: [
          {
            name: 'poolKey',
            type: 'tuple',
            internalType: 'struct PoolKey',
            components: [
              { name: 'currency0', type: 'address', internalType: 'Currency' },
              { name: 'currency1', type: 'address', internalType: 'Currency' },
              { name: 'hooks', type: 'address', internalType: 'contract IHooks' },
              { name: 'poolManager', type: 'address', internalType: 'contract IPoolManager' },
              { name: 'fee', type: 'uint24', internalType: 'uint24' },
              { name: 'parameters', type: 'bytes32', internalType: 'bytes32' },
            ],
          },
          { name: 'amount0', type: 'uint128', internalType: 'uint128' },
          { name: 'amount1', type: 'uint128', internalType: 'uint128' },
          { name: 'amount0Min', type: 'uint128', internalType: 'uint128' },
          { name: 'amount1Min', type: 'uint128', internalType: 'uint128' },
          { name: 'activeIdDesired', type: 'uint256', internalType: 'uint256' },
          { name: 'idSlippage', type: 'uint256', internalType: 'uint256' },
          { name: 'deltaIds', type: 'int256[]', internalType: 'int256[]' },
          { name: 'distributionX', type: 'uint256[]', internalType: 'uint256[]' },
          { name: 'distributionY', type: 'uint256[]', internalType: 'uint256[]' },
          { name: 'to', type: 'address', internalType: 'address' },
          { name: 'deadline', type: 'uint256', internalType: 'uint256' },
        ],
      },
    ],
    outputs: [
      { name: 'amount0', type: 'uint128', internalType: 'uint128' },
      { name: 'amount1', type: 'uint128', internalType: 'uint128' },
      { name: 'tokenIds', type: 'uint256[]', internalType: 'uint256[]' },
      { name: 'liquidityMinted', type: 'uint256[]', internalType: 'uint256[]' },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'approveForAll',
    inputs: [
      { name: 'operator', type: 'address', internalType: 'address' },
      { name: 'approved', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'balanceOf',
    inputs: [
      { name: '', type: 'address', internalType: 'address' },
      { name: '', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'balanceOfBatch',
    inputs: [
      { name: 'owners', type: 'address[]', internalType: 'address[]' },
      { name: 'ids', type: 'uint256[]', internalType: 'uint256[]' },
    ],
    outputs: [{ name: 'balances', type: 'uint256[]', internalType: 'uint256[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'batchTransferFrom',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'to', type: 'address', internalType: 'address' },
      { name: 'ids', type: 'uint256[]', internalType: 'uint256[]' },
      { name: 'amounts', type: 'uint256[]', internalType: 'uint256[]' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'initialize',
    inputs: [
      {
        name: 'poolKey',
        type: 'tuple',
        internalType: 'struct PoolKey',
        components: [
          { name: 'currency0', type: 'address', internalType: 'Currency' },
          { name: 'currency1', type: 'address', internalType: 'Currency' },
          { name: 'hooks', type: 'address', internalType: 'contract IHooks' },
          { name: 'poolManager', type: 'address', internalType: 'contract IPoolManager' },
          { name: 'fee', type: 'uint24', internalType: 'uint24' },
          { name: 'parameters', type: 'bytes32', internalType: 'bytes32' },
        ],
      },
      { name: 'activeId', type: 'uint24', internalType: 'uint24' },
      { name: 'hookData', type: 'bytes', internalType: 'bytes' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'isApprovedForAll',
    inputs: [
      { name: '', type: 'address', internalType: 'address' },
      { name: '', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'lockAcquired',
    inputs: [{ name: 'rawData', type: 'bytes', internalType: 'bytes' }],
    outputs: [{ name: 'returnData', type: 'bytes', internalType: 'bytes' }],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'name',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'poolManager',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IBinPoolManager' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'positions',
    inputs: [{ name: 'tokenId', type: 'uint256', internalType: 'uint256' }],
    outputs: [
      { name: 'currency0', type: 'address', internalType: 'Currency' },
      { name: 'currency1', type: 'address', internalType: 'Currency' },
      { name: 'fee', type: 'uint24', internalType: 'uint24' },
      { name: 'binId', type: 'uint24', internalType: 'uint24' },
    ],
    stateMutability: 'view',
  },
  { type: 'function', name: 'refundETH', inputs: [], outputs: [], stateMutability: 'payable' },
  {
    type: 'function',
    name: 'removeLiquidity',
    inputs: [
      {
        name: 'params',
        type: 'tuple',
        internalType: 'struct IBinFungiblePositionManager.RemoveLiquidityParams',
        components: [
          {
            name: 'poolKey',
            type: 'tuple',
            internalType: 'struct PoolKey',
            components: [
              { name: 'currency0', type: 'address', internalType: 'Currency' },
              { name: 'currency1', type: 'address', internalType: 'Currency' },
              { name: 'hooks', type: 'address', internalType: 'contract IHooks' },
              { name: 'poolManager', type: 'address', internalType: 'contract IPoolManager' },
              { name: 'fee', type: 'uint24', internalType: 'uint24' },
              { name: 'parameters', type: 'bytes32', internalType: 'bytes32' },
            ],
          },
          { name: 'amount0Min', type: 'uint128', internalType: 'uint128' },
          { name: 'amount1Min', type: 'uint128', internalType: 'uint128' },
          { name: 'ids', type: 'uint256[]', internalType: 'uint256[]' },
          { name: 'amounts', type: 'uint256[]', internalType: 'uint256[]' },
          { name: 'from', type: 'address', internalType: 'address' },
          { name: 'to', type: 'address', internalType: 'address' },
          { name: 'deadline', type: 'uint256', internalType: 'uint256' },
        ],
      },
    ],
    outputs: [
      { name: 'amount0', type: 'uint128', internalType: 'uint128' },
      { name: 'amount1', type: 'uint128', internalType: 'uint128' },
      { name: 'tokenIds', type: 'uint256[]', internalType: 'uint256[]' },
    ],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'sweepToken',
    inputs: [
      { name: 'currency', type: 'address', internalType: 'Currency' },
      { name: 'amountMinimum', type: 'uint256', internalType: 'uint256' },
      { name: 'recipient', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'symbol',
    inputs: [],
    outputs: [{ name: '', type: 'string', internalType: 'string' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'totalSupply',
    inputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    outputs: [{ name: '', type: 'uint256', internalType: 'uint256' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'unwrapWETH9',
    inputs: [
      { name: 'amountMinimum', type: 'uint256', internalType: 'uint256' },
      { name: 'recipient', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'vault',
    inputs: [],
    outputs: [{ name: '', type: 'address', internalType: 'contract IVault' }],
    stateMutability: 'view',
  },
  {
    type: 'event',
    name: 'ApprovalForAll',
    inputs: [
      { name: 'account', type: 'address', indexed: true, internalType: 'address' },
      { name: 'sender', type: 'address', indexed: true, internalType: 'address' },
      { name: 'approved', type: 'bool', indexed: false, internalType: 'bool' },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'TransferBatch',
    inputs: [
      { name: 'sender', type: 'address', indexed: true, internalType: 'address' },
      { name: 'from', type: 'address', indexed: true, internalType: 'address' },
      { name: 'to', type: 'address', indexed: true, internalType: 'address' },
      { name: 'ids', type: 'uint256[]', indexed: false, internalType: 'uint256[]' },
      { name: 'amounts', type: 'uint256[]', indexed: false, internalType: 'uint256[]' },
    ],
    anonymous: false,
  },
  { type: 'error', name: 'AddLiquidityInputActiveIdMismath', inputs: [] },
  { type: 'error', name: 'BinFungibleToken_AddressThisOrZero', inputs: [] },
  {
    type: 'error',
    name: 'BinFungibleToken_BurnExceedsBalance',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'id', type: 'uint256', internalType: 'uint256' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
  },
  { type: 'error', name: 'BinFungibleToken_InvalidLength', inputs: [] },
  {
    type: 'error',
    name: 'BinFungibleToken_SelfApproval',
    inputs: [{ name: 'owner', type: 'address', internalType: 'address' }],
  },
  {
    type: 'error',
    name: 'BinFungibleToken_SpenderNotApproved',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'spender', type: 'address', internalType: 'address' },
    ],
  },
  {
    type: 'error',
    name: 'BinFungibleToken_TransferExceedsBalance',
    inputs: [
      { name: 'from', type: 'address', internalType: 'address' },
      { name: 'id', type: 'uint256', internalType: 'uint256' },
      { name: 'amount', type: 'uint256', internalType: 'uint256' },
    ],
  },
  {
    type: 'error',
    name: 'DeadlineExceeded',
    inputs: [
      { name: '', type: 'uint256', internalType: 'uint256' },
      { name: '', type: 'uint256', internalType: 'uint256' },
    ],
  },
  { type: 'error', name: 'ERC20TransferFailed', inputs: [] },
  { type: 'error', name: 'IdDesiredOverflows', inputs: [{ name: '', type: 'uint24', internalType: 'uint24' }] },
  { type: 'error', name: 'IdOverflows', inputs: [{ name: '', type: 'int256', internalType: 'int256' }] },
  { type: 'error', name: 'IncorrectOutputAmount', inputs: [] },
  { type: 'error', name: 'InputLengthMismatch', inputs: [] },
  { type: 'error', name: 'InsufficientToken', inputs: [] },
  { type: 'error', name: 'InvalidTokenID', inputs: [] },
  { type: 'error', name: 'NativeTransferFailed', inputs: [] },
  { type: 'error', name: 'OnlyVaultCaller', inputs: [] },
  { type: 'error', name: 'OutputAmountSlippage', inputs: [] },
  { type: 'error', name: 'TransactionTooOld', inputs: [] },
] as const
