import { stringToBytes, toHex, zeroAddress } from 'viem'
import { describe, expect, test } from 'vitest'
import type { PoolKey } from '../../../utils/poolKey'
import { getBinLiquidityConfigs } from '../getBinLiquidityConfigs'
import { binPoolMintCalldata } from './mint'

describe('mint', () => {
  const bob = '0x1D96F2f6BeF1202E4Ce1Ff6Dad0c2CB002861d3e' as const

  const activeId = 2n ** 23n - 24647n
  const poolKey: PoolKey<'Bin'> = {
    currency0: '0x7d356b6aFBF4b3e9a5d9AA02275F0e00558627e8',
    currency1: '0xB071bbB31222aB5A9fbb50E4eFcad2e784221dA3',
    hooks: zeroAddress,
    poolManager: '0x2e234DAe75C793f67A35089C9d99245E1C58470b',
    fee: 3000,
    parameters: {
      binStep: 10,
    },
  }

  test('mint x&y', () => {
    const result = binPoolMintCalldata(
      poolKey,
      {
        to: bob,
        amountIn: [120000000000000000000n, 2400000000n],
        liquidityConfigs: getBinLiquidityConfigs({
          binId: Number(activeId),
          nbBinX: 6,
          nbBinY: 6,
        }),
        binStep: BigInt(poolKey.parameters.binStep),
        salt: 0,
      },
      toHex(stringToBytes('0x00'))
    )

    expect(result).toBe(
      '0xebc413e00000000000000000000000007d356b6afbf4b3e9a5d9aa02275f0e00558627e8000000000000000000000000b071bbb31222ab5a9fbb50e4efcad2e784221da300000000000000000000000000000000000000000000000000000000000000000000000000000000000000002e234dae75c793f67a35089c9d99245e1c58470b0000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002e000000000000000000000000000000000000000000000000000000000000000600000000000000000000000008f0d180000000000000000068155a43676e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b00000000000000000000000000000000000000000002501e734690aaaa7f9fb400000000000000000000000000000000000000000002501e734690aaaa7f9fb500000000000000000000000000000000000000000002501e734690aaaa7f9fb600000000000000000000000000000000000000000002501e734690aaaa7f9fb700000000000000000000000000000000000000000002501e734690aaaa7f9fb80000000000000000000000000002501e734690aaaa02501e734690aaaa7f9fb90000000000000000000000000002501e734690aaaa00000000000000007f9fba0000000000000000000000000002501e734690aaaa00000000000000007f9fbb0000000000000000000000000002501e734690aaaa00000000000000007f9fbc0000000000000000000000000002501e734690aaaa00000000000000007f9fbd0000000000000000000000000002501e734690aaaa00000000000000007f9fbe00000000000000000000000000000000000000000000000000000000000000043078303000000000000000000000000000000000000000000000000000000000'
    )
  })

  test('mint x', () => {
    const result = binPoolMintCalldata(
      poolKey,
      {
        to: bob,
        amountIn: [100000000000000000000n, 2000000000n],
        liquidityConfigs: getBinLiquidityConfigs({
          binId: Number(activeId),
          nbBinX: 6,
          nbBinY: 0,
        }),
        binStep: BigInt(poolKey.parameters.binStep),
        salt: 0,
      },
      toHex(stringToBytes('0x00'))
    )

    expect(result).toBe(
      '0xebc413e00000000000000000000000007d356b6afbf4b3e9a5d9aa02275f0e00558627e8000000000000000000000000b071bbb31222ab5a9fbb50e4efcad2e784221da300000000000000000000000000000000000000000000000000000000000000000000000000000000000000002e234dae75c793f67a35089c9d99245e1c58470b0000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000600000000000000000000000007735940000000000000000056bc75e2d63100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000000000002501e734690aaaa00000000000000007f9fb90000000000000000000000000002501e734690aaaa00000000000000007f9fba0000000000000000000000000002501e734690aaaa00000000000000007f9fbb0000000000000000000000000002501e734690aaaa00000000000000007f9fbc0000000000000000000000000002501e734690aaaa00000000000000007f9fbd0000000000000000000000000002501e734690aaaa00000000000000007f9fbe00000000000000000000000000000000000000000000000000000000000000043078303000000000000000000000000000000000000000000000000000000000'
    )
  })

  test('mint y', () => {
    const result = binPoolMintCalldata(
      poolKey,
      {
        to: bob,
        amountIn: [100000000000000000000n, 2000000000n],
        liquidityConfigs: getBinLiquidityConfigs({
          binId: Number(activeId),
          nbBinX: 0,
          nbBinY: 6,
        }),
        binStep: BigInt(poolKey.parameters.binStep),
        salt: 0,
      },
      toHex(stringToBytes('0x00'))
    )

    expect(result).toBe(
      '0xebc413e00000000000000000000000007d356b6afbf4b3e9a5d9aa02275f0e00558627e8000000000000000000000000b071bbb31222ab5a9fbb50e4efcad2e784221da300000000000000000000000000000000000000000000000000000000000000000000000000000000000000002e234dae75c793f67a35089c9d99245e1c58470b0000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000000600000000000000000000000007735940000000000000000056bc75e2d631000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000002501e734690aaaa7f9fb400000000000000000000000000000000000000000002501e734690aaaa7f9fb500000000000000000000000000000000000000000002501e734690aaaa7f9fb600000000000000000000000000000000000000000002501e734690aaaa7f9fb700000000000000000000000000000000000000000002501e734690aaaa7f9fb800000000000000000000000000000000000000000002501e734690aaaa7f9fb900000000000000000000000000000000000000000000000000000000000000043078303000000000000000000000000000000000000000000000000000000000'
    )
  })
})
