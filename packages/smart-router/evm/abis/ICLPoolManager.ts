export const clPoolManagerAbi = [
  {
    inputs: [{ internalType: 'contract IVault', name: '_vault', type: 'address' }],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'CannotUpdateEmptyPosition', type: 'error' },
  {
    inputs: [
      { internalType: 'address', name: 'currency0', type: 'address' },
      { internalType: 'address', name: 'currency1', type: 'address' },
    ],
    name: 'CurrenciesInitializedOutOfOrder',
    type: 'error',
  },
  { inputs: [], name: 'EnforcedPause', type: 'error' },
  { inputs: [], name: 'HookConfigValidationError', type: 'error' },
  { inputs: [], name: 'HookDeltaExceedsSwapAmount', type: 'error' },
  { inputs: [], name: 'HookPermissionsValidationError', type: 'error' },
  { inputs: [], name: 'InvalidBips', type: 'error' },
  { inputs: [], name: 'InvalidCaller', type: 'error' },
  { inputs: [], name: 'InvalidFeeForExactOut', type: 'error' },
  { inputs: [], name: 'InvalidHookResponse', type: 'error' },
  {
    inputs: [
      { internalType: 'uint160', name: 'sqrtPriceCurrentX96', type: 'uint160' },
      { internalType: 'uint160', name: 'sqrtPriceLimitX96', type: 'uint160' },
    ],
    name: 'InvalidSqrtPriceLimit',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'uint160', name: 'sqrtPriceX96', type: 'uint160' }],
    name: 'InvalidSqrtRatio',
    type: 'error',
  },
  { inputs: [{ internalType: 'int24', name: 'tick', type: 'int24' }], name: 'InvalidTick', type: 'error' },
  { inputs: [{ internalType: 'uint24', name: 'fee', type: 'uint24' }], name: 'LPFeeTooLarge', type: 'error' },
  { inputs: [], name: 'NoLiquidityToReceiveFees', type: 'error' },
  { inputs: [], name: 'PoolAlreadyInitialized', type: 'error' },
  { inputs: [], name: 'PoolManagerMismatch', type: 'error' },
  { inputs: [], name: 'PoolNotInitialized', type: 'error' },
  { inputs: [], name: 'PoolPaused', type: 'error' },
  { inputs: [], name: 'ProtocolFeeCannotBeFetched', type: 'error' },
  { inputs: [{ internalType: 'uint24', name: 'fee', type: 'uint24' }], name: 'ProtocolFeeTooLarge', type: 'error' },
  { inputs: [], name: 'SwapAmountCannotBeZero', type: 'error' },
  { inputs: [{ internalType: 'int24', name: 'tick', type: 'int24' }], name: 'TickLiquidityOverflow', type: 'error' },
  {
    inputs: [{ internalType: 'int24', name: 'tickLower', type: 'int24' }],
    name: 'TickLowerOutOfBounds',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'int24', name: 'tickSpacing', type: 'int24' }],
    name: 'TickSpacingTooLarge',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'int24', name: 'tickSpacing', type: 'int24' }],
    name: 'TickSpacingTooSmall',
    type: 'error',
  },
  {
    inputs: [{ internalType: 'int24', name: 'tickUpper', type: 'int24' }],
    name: 'TickUpperOutOfBounds',
    type: 'error',
  },
  {
    inputs: [
      { internalType: 'int24', name: 'tickLower', type: 'int24' },
      { internalType: 'int24', name: 'tickUpper', type: 'int24' },
    ],
    name: 'TicksMisordered',
    type: 'error',
  },
  { inputs: [], name: 'UnauthorizedDynamicLPFeeUpdate', type: 'error' },
  { inputs: [], name: 'UnusedBitsNonZero', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'PoolId', name: 'id', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
      { indexed: false, internalType: 'uint256', name: 'amount0', type: 'uint256' },
      { indexed: false, internalType: 'uint256', name: 'amount1', type: 'uint256' },
      { indexed: false, internalType: 'int24', name: 'tick', type: 'int24' },
    ],
    name: 'Donate',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'PoolId', name: 'id', type: 'bytes32' },
      { indexed: false, internalType: 'uint24', name: 'dynamicLPFee', type: 'uint24' },
    ],
    name: 'DynamicLPFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'PoolId', name: 'id', type: 'bytes32' },
      { indexed: true, internalType: 'Currency', name: 'currency0', type: 'address' },
      { indexed: true, internalType: 'Currency', name: 'currency1', type: 'address' },
      { indexed: false, internalType: 'contract IHooks', name: 'hooks', type: 'address' },
      { indexed: false, internalType: 'uint24', name: 'fee', type: 'uint24' },
      { indexed: false, internalType: 'bytes32', name: 'parameters', type: 'bytes32' },
      { indexed: false, internalType: 'uint160', name: 'sqrtPriceX96', type: 'uint160' },
      { indexed: false, internalType: 'int24', name: 'tick', type: 'int24' },
    ],
    name: 'Initialize',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'PoolId', name: 'id', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
      { indexed: false, internalType: 'int24', name: 'tickLower', type: 'int24' },
      { indexed: false, internalType: 'int24', name: 'tickUpper', type: 'int24' },
      { indexed: false, internalType: 'int256', name: 'liquidityDelta', type: 'int256' },
      { indexed: false, internalType: 'bytes32', name: 'salt', type: 'bytes32' },
    ],
    name: 'ModifyLiquidity',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Paused',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: true, internalType: 'address', name: 'protocolFeeController', type: 'address' }],
    name: 'ProtocolFeeControllerUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'PoolId', name: 'id', type: 'bytes32' },
      { indexed: false, internalType: 'uint24', name: 'protocolFee', type: 'uint24' },
    ],
    name: 'ProtocolFeeUpdated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'PoolId', name: 'id', type: 'bytes32' },
      { indexed: true, internalType: 'address', name: 'sender', type: 'address' },
      { indexed: false, internalType: 'int128', name: 'amount0', type: 'int128' },
      { indexed: false, internalType: 'int128', name: 'amount1', type: 'int128' },
      { indexed: false, internalType: 'uint160', name: 'sqrtPriceX96', type: 'uint160' },
      { indexed: false, internalType: 'uint128', name: 'liquidity', type: 'uint128' },
      { indexed: false, internalType: 'int24', name: 'tick', type: 'int24' },
      { indexed: false, internalType: 'uint24', name: 'fee', type: 'uint24' },
      { indexed: false, internalType: 'uint16', name: 'protocolFee', type: 'uint16' },
    ],
    name: 'Swap',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: 'address', name: 'account', type: 'address' }],
    name: 'Unpaused',
    type: 'event',
  },
  {
    inputs: [
      { internalType: 'address', name: 'recipient', type: 'address' },
      { internalType: 'Currency', name: 'currency', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
    ],
    name: 'collectProtocolFees',
    outputs: [{ internalType: 'uint256', name: 'amountCollected', type: 'uint256' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
          { internalType: 'contract IPoolManager', name: 'poolManager', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'bytes32', name: 'parameters', type: 'bytes32' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint256', name: 'amount0', type: 'uint256' },
      { internalType: 'uint256', name: 'amount1', type: 'uint256' },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'donate',
    outputs: [{ internalType: 'BalanceDelta', name: 'delta', type: 'int256' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'slot', type: 'bytes32' }],
    name: 'extsload',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32[]', name: 'slots', type: 'bytes32[]' }],
    name: 'extsload',
    outputs: [{ internalType: 'bytes32[]', name: '', type: 'bytes32[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'PoolId', name: 'id', type: 'bytes32' }],
    name: 'getFeeGrowthGlobals',
    outputs: [
      { internalType: 'uint256', name: 'feeGrowthGlobal0x128', type: 'uint256' },
      { internalType: 'uint256', name: 'feeGrowthGlobal1x128', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'PoolId', name: 'id', type: 'bytes32' },
      { internalType: 'address', name: '_owner', type: 'address' },
      { internalType: 'int24', name: 'tickLower', type: 'int24' },
      { internalType: 'int24', name: 'tickUpper', type: 'int24' },
      { internalType: 'bytes32', name: 'salt', type: 'bytes32' },
    ],
    name: 'getLiquidity',
    outputs: [{ internalType: 'uint128', name: 'liquidity', type: 'uint128' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'PoolId', name: 'id', type: 'bytes32' }],
    name: 'getLiquidity',
    outputs: [{ internalType: 'uint128', name: 'liquidity', type: 'uint128' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'PoolId', name: 'id', type: 'bytes32' },
      { internalType: 'int16', name: 'word', type: 'int16' },
    ],
    name: 'getPoolBitmapInfo',
    outputs: [{ internalType: 'uint256', name: 'tickBitmap', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'PoolId', name: 'id', type: 'bytes32' },
      { internalType: 'int24', name: 'tick', type: 'int24' },
    ],
    name: 'getPoolTickInfo',
    outputs: [
      {
        components: [
          { internalType: 'uint128', name: 'liquidityGross', type: 'uint128' },
          { internalType: 'int128', name: 'liquidityNet', type: 'int128' },
          { internalType: 'uint256', name: 'feeGrowthOutside0X128', type: 'uint256' },
          { internalType: 'uint256', name: 'feeGrowthOutside1X128', type: 'uint256' },
        ],
        internalType: 'struct Tick.Info',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'PoolId', name: 'id', type: 'bytes32' },
      { internalType: 'address', name: 'owner', type: 'address' },
      { internalType: 'int24', name: 'tickLower', type: 'int24' },
      { internalType: 'int24', name: 'tickUpper', type: 'int24' },
      { internalType: 'bytes32', name: 'salt', type: 'bytes32' },
    ],
    name: 'getPosition',
    outputs: [
      {
        components: [
          { internalType: 'uint128', name: 'liquidity', type: 'uint128' },
          { internalType: 'uint256', name: 'feeGrowthInside0LastX128', type: 'uint256' },
          { internalType: 'uint256', name: 'feeGrowthInside1LastX128', type: 'uint256' },
        ],
        internalType: 'struct CLPosition.Info',
        name: 'position',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'PoolId', name: 'id', type: 'bytes32' }],
    name: 'getSlot0',
    outputs: [
      { internalType: 'uint160', name: 'sqrtPriceX96', type: 'uint160' },
      { internalType: 'int24', name: 'tick', type: 'int24' },
      { internalType: 'uint24', name: 'protocolFee', type: 'uint24' },
      { internalType: 'uint24', name: 'lpFee', type: 'uint24' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
          { internalType: 'contract IPoolManager', name: 'poolManager', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'bytes32', name: 'parameters', type: 'bytes32' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint160', name: 'sqrtPriceX96', type: 'uint160' },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'initialize',
    outputs: [{ internalType: 'int24', name: 'tick', type: 'int24' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
          { internalType: 'contract IPoolManager', name: 'poolManager', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'bytes32', name: 'parameters', type: 'bytes32' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'int24', name: 'tickLower', type: 'int24' },
          { internalType: 'int24', name: 'tickUpper', type: 'int24' },
          { internalType: 'int256', name: 'liquidityDelta', type: 'int256' },
          { internalType: 'bytes32', name: 'salt', type: 'bytes32' },
        ],
        internalType: 'struct ICLPoolManager.ModifyLiquidityParams',
        name: 'params',
        type: 'tuple',
      },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'modifyLiquidity',
    outputs: [
      { internalType: 'BalanceDelta', name: 'delta', type: 'int256' },
      { internalType: 'BalanceDelta', name: 'feeDelta', type: 'int256' },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'pause', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [],
    name: 'paused',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'PoolId', name: 'id', type: 'bytes32' }],
    name: 'poolIdToPoolKey',
    outputs: [
      { internalType: 'Currency', name: 'currency0', type: 'address' },
      { internalType: 'Currency', name: 'currency1', type: 'address' },
      { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
      { internalType: 'contract IPoolManager', name: 'poolManager', type: 'address' },
      { internalType: 'uint24', name: 'fee', type: 'uint24' },
      { internalType: 'bytes32', name: 'parameters', type: 'bytes32' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'protocolFeeController',
    outputs: [{ internalType: 'contract IProtocolFeeController', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'Currency', name: 'currency', type: 'address' }],
    name: 'protocolFeesAccrued',
    outputs: [{ internalType: 'uint256', name: 'amount', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
          { internalType: 'contract IPoolManager', name: 'poolManager', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'bytes32', name: 'parameters', type: 'bytes32' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint24', name: 'newProtocolFee', type: 'uint24' },
    ],
    name: 'setProtocolFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'contract IProtocolFeeController', name: 'controller', type: 'address' }],
    name: 'setProtocolFeeController',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
          { internalType: 'contract IPoolManager', name: 'poolManager', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'bytes32', name: 'parameters', type: 'bytes32' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      {
        components: [
          { internalType: 'bool', name: 'zeroForOne', type: 'bool' },
          { internalType: 'int256', name: 'amountSpecified', type: 'int256' },
          { internalType: 'uint160', name: 'sqrtPriceLimitX96', type: 'uint160' },
        ],
        internalType: 'struct ICLPoolManager.SwapParams',
        name: 'params',
        type: 'tuple',
      },
      { internalType: 'bytes', name: 'hookData', type: 'bytes' },
    ],
    name: 'swap',
    outputs: [{ internalType: 'BalanceDelta', name: 'delta', type: 'int256' }],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  { inputs: [], name: 'unpause', outputs: [], stateMutability: 'nonpayable', type: 'function' },
  {
    inputs: [
      {
        components: [
          { internalType: 'Currency', name: 'currency0', type: 'address' },
          { internalType: 'Currency', name: 'currency1', type: 'address' },
          { internalType: 'contract IHooks', name: 'hooks', type: 'address' },
          { internalType: 'contract IPoolManager', name: 'poolManager', type: 'address' },
          { internalType: 'uint24', name: 'fee', type: 'uint24' },
          { internalType: 'bytes32', name: 'parameters', type: 'bytes32' },
        ],
        internalType: 'struct PoolKey',
        name: 'key',
        type: 'tuple',
      },
      { internalType: 'uint24', name: 'newDynamicLPFee', type: 'uint24' },
    ],
    name: 'updateDynamicLPFee',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'vault',
    outputs: [{ internalType: 'contract IVault', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
] as const
