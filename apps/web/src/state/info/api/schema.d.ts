/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/unclaim-fees/{protocol}/{chainId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Batch get unclaimed fees
     * @deprecated
     */
    post: operations['postUnclaim-feesByProtocolByChainId']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tx/v3/{chainName}/swaps': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v3 swaps by page */
    get: operations['getCachedTxV3ByChainNameSwaps']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tx/v4/{chainName}/recent': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get recent v4 transaction */
    get: operations['getCachedTxV4ByChainNameRecent']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tx/v3/{chainName}/recent': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get recent v3 transaction */
    get: operations['getCachedTxV3ByChainNameRecent']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tx/v2/{chainName}/recent': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get recent v2 transaction */
    get: operations['getCachedTxV2ByChainNameRecent']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tx/stable/{chainName}/recent': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get recent stable transaction */
    get: operations['getCachedTxStableByChainNameRecent']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/chart/{chainName}/rate': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get token to token rate chart */
    get: operations['getCachedTokensChartByChainNameRate']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/chart/{chainName}/{address}/{protocol}/price': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get token price chart by protocol */
    get: operations['getCachedTokensChartByChainNameByAddressByProtocolPrice']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/chart/{chainName}/{address}/price': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get token price chart */
    get: operations['getCachedTokensChartByChainNameByAddressPrice']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/chart/{chainName}/{address}/{protocol}/volume': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get token volume chart by protocol */
    get: operations['getCachedTokensChartByChainNameByAddressByProtocolVolume']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/chart/{chainName}/{address}/{protocol}/tvl': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get token tvl chart by protocol */
    get: operations['getCachedTokensChartByChainNameByAddressByProtocolTvl']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/chart/{chainName}/{address}/tvl': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get token tvl chart */
    get: operations['getCachedTokensChartByChainNameByAddressTvl']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/price/list/{ids}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get token price reference batch */
    get: operations['getCachedTokensPriceListByIds']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/{chainName}/{address}/price': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get token price reference
     * @description Get token price reference from liquidity pool. If more than one protocol is provided, it will return the largest TVL protocol
     */
    get: operations['getCachedTokensByChainNameByAddressPrice']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/v3/{chainName}/{address}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v3 token data */
    get: operations['getCachedTokensV3ByChainNameByAddress']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/v2/{chainName}/{address}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v2 token data */
    get: operations['getCachedTokensV2ByChainNameByAddress']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/stable/{chainName}/{address}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get stable token data */
    get: operations['getCachedTokensStableByChainNameByAddress']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/v3/{chainName}/list/top': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v3 top tokens */
    get: operations['getCachedTokensV3ByChainNameListTop']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/v2/{chainName}/list/top': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v2 top tokens */
    get: operations['getCachedTokensV2ByChainNameListTop']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/tokens/stable/{chainName}/list/top': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get stable top tokens */
    get: operations['getCachedTokensStableByChainNameListTop']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/ticks/v3/{chainName}/{pool}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get all ticks from v3 pool */
    get: operations['getCachedPoolsTicksV3ByChainNameByPool']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/positions/v3/{chainName}/{pool}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get active positions from v3 pool */
    get: operations['getCachedPoolsPositionsV3ByChainNameByPool']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/chart/v3/{chainName}/{address}/rate': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v3 pool rate chart */
    get: operations['getCachedPoolsChartV3ByChainNameByAddressRate']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/chart/v3/{chainName}/{address}/fees': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v3 pool fees chart */
    get: operations['getCachedPoolsChartV3ByChainNameByAddressFees']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/chart/{protocol}/{chainName}/{address}/tvl': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get pool tvl chart */
    get: operations['getCachedPoolsChartByProtocolByChainNameByAddressTvl']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/chart/{protocol}/{chainName}/{address}/volume': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get pool volume chart */
    get: operations['getCachedPoolsChartByProtocolByChainNameByAddressVolume']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/apr/v4/{chainName}/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v4 lp apr */
    get: operations['getCachedPoolsAprV4ByChainNameById']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/apr/v2/{chainName}/{address}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v2 lp apr */
    get: operations['getCachedPoolsAprV2ByChainNameByAddress']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/apr/v3/{chainName}/{address}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v3 lp apr */
    get: operations['getCachedPoolsAprV3ByChainNameByAddress']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/apr/stable/{chainName}/{address}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get stable lp apr */
    get: operations['getCachedPoolsAprStableByChainNameByAddress']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/apr/v2/{chainName}/farms-lp': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v2 farm lp apr */
    get: operations['getCachedPoolsAprV2ByChainNameFarms-lp']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/apr/v3/{chainName}/farms-lp': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v3 farm lp apr */
    get: operations['getCachedPoolsAprV3ByChainNameFarms-lp']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/apr/stable/{chainName}/farms-lp': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get stable farm lp apr */
    get: operations['getCachedPoolsAprStableByChainNameFarms-lp']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/{chainName}/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get pool data by id */
    get: operations['getCachedPoolsByChainNameById']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/list': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get pools list */
    get: operations['getCachedPoolsList']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/farming': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get farming pools */
    get: operations['getCachedPoolsFarming']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/v3/{chainName}/{address}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v3 pool data */
    get: operations['getCachedPoolsV3ByChainNameByAddress']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/v2/{chainName}/{address}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get v2 pool data */
    get: operations['getCachedPoolsV2ByChainNameByAddress']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/stable/{chainName}/{address}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get stable pool data */
    get: operations['getCachedPoolsStableByChainNameByAddress']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/v3/{chainName}/list/simple': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get simple v3 pools list */
    get: operations['getCachedPoolsV3ByChainNameListSimple']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/v3/{chainName}/list/top': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get top v3 pools */
    get: operations['getCachedPoolsV3ByChainNameListTop']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/v2/{chainName}/list/top': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get top v2 pools */
    get: operations['getCachedPoolsV2ByChainNameListTop']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/pools/stable/{chainName}/list/top': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get top stable pools */
    get: operations['getCachedPoolsStableByChainNameListTop']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/block/{chainName}/{timestamp}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get closest block by unix timestamp */
    get: operations['getCachedBlockByChainNameByTimestamp']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/gauges/total-votes/all': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getCachedGaugesTotal-votesAll']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/protocol/chart/{protocol}/{chainName}/volume': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get protocol volume chart */
    get: operations['getCachedProtocolChartByProtocolByChainNameVolume']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/protocol/chart/{protocol}/{chainName}/tvl': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get protocol tvl chart */
    get: operations['getCachedProtocolChartByProtocolByChainNameTvl']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/protocol/{protocol}/{chainName}/search': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Search protocol tokens and pools */
    get: operations['getCachedProtocolByProtocolByChainNameSearch']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/cached/protocol/{protocol}/{chainName}/stats': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get protocol stats */
    get: operations['getCachedProtocolByProtocolByChainNameStats']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/status/v': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getStatusV']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/status/throw/{protocol}/{chainName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Throw if data is behind */
    get: operations['getStatusThrowByProtocolByChainName']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/status/{protocol}/{chainName}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** Get status of info data for chain */
    get: operations['getStatusByProtocolByChainName']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/webhooks/web-deployed': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations['postWebhooksWeb-deployed']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/doc/json': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['getDocJson']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    /**
     * @description Chain name
     * @enum {string}
     */
    ChainName: 'bsc' | 'bsc-testnet' | 'ethereum' | 'base' | 'opbnb' | 'zksync' | 'polygon-zkevm' | 'linea' | 'arbitrum'
    /**
     * @description Protocol version
     * @enum {string}
     */
    Protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
    transactions: {
      id: string
      transactionHash: string
      poolId: string
      token0: {
        id: string
        symbol: string
        name: string
        decimals: number
      }
      token1: {
        id: string
        symbol: string
        name: string
        decimals: number
      }
      amount0: string
      amount1: string
      amountUSD: string
      origin: null | string
      recipient: null | string
      timestamp: Record<string, never> | string
    }[]
    transactionsWithType: {
      /** @enum {string} */
      type: 'mint' | 'burn' | 'swap'
      id: string
      transactionHash: string
      poolId: string
      token0: {
        id: string
        symbol: string
        name: string
        decimals: number
      }
      token1: {
        id: string
        symbol: string
        name: string
        decimals: number
      }
      amount0: string
      amount1: string
      amountUSD: string
      origin: null | string
      recipient: null | string
      timestamp: Record<string, never> | string
    }[]
    v3TokenData: {
      /** @description Token address */
      id: string
      symbol: string
      name: string
      decimals: number
      totalTxCount: number
      txCount24h: number
      txCount48h: number
      txCount7d: number
      priceUSD: string
      priceUSD24h: string
      priceUSD48h: string
      priceUSD7d: string
      /** @description Total volume in USD */
      totalVolumeUSD: string
      volumeUSD24h: null | string
      volumeUSD48h: null | string
      volumeUSD7d: null | string
      tvlUSD: string
      tvlUSD24h: string
      tvlUSD48h: string
      tvlUSD7d: string
      tvl: string
      tvl24h: string
      tvl48h: string
      tvl7d: string
      totalFeeUSD: string
      feeUSD24h: string
      feeUSD48h: string
      feeUSD7d: string
    }
    v2TokenData: {
      /** @description Token address */
      id: string
      symbol: string
      name: string
      decimals: number
      totalTxCount: number
      txCount24h: number
      txCount48h: number
      txCount7d: number
      priceUSD: string
      priceUSD24h: string
      priceUSD48h: string
      priceUSD7d: string
      /** @description Total volume in USD */
      totalVolumeUSD: string
      volumeUSD24h: null | string
      volumeUSD48h: null | string
      volumeUSD7d: null | string
      tvlUSD: string
      tvlUSD24h: string
      tvlUSD48h: string
      tvlUSD7d: string
      tvl: string
      tvl24h: string
      tvl48h: string
      tvl7d: string
    }
    TokenPrice: {
      id: string
      priceUSD: string
      /**
       * @description Protocol version
       * @enum {string}
       */
      protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
      tvlUSD: string
      timestamp: Record<string, never> | string
    }
    ticks: {
      /** @description Cursor for pagination start */
      startCursor?: string
      /** @description Cursor for pagination end */
      endCursor?: string
      /** @description Has next page */
      hasNextPage?: boolean
      /** @description Has previous page */
      hasPrevPage?: boolean
      rows: {
        id: string
        /** @description Tick index */
        tickIdx: number
        liquidityGross: string
        liquidityNet: string
        price0: string
        price1: string
      }[]
    }
    CLPositions: {
      /** @description Cursor for pagination start */
      startCursor?: string
      /** @description Cursor for pagination end */
      endCursor?: string
      /** @description Has next page */
      hasNextPage?: boolean
      /** @description Has previous page */
      hasPrevPage?: boolean
      rows: {
        /** @description Position id */
        id: string
        liquidity: string
        /** @description Ethereum address */
        owner: string
        /** @description Lower tick index */
        lowerTickIdx: number
        /** @description Upper tick index */
        upperTickIdx: number
      }[]
    }
    /**
     * @description Chart period
     * @enum {string}
     */
    ChartPeriod: '1H' | '1D' | '1W' | '1M' | '1Y'
    AprSchema: {
      apr24h: string
      apr7d: string
      volumeUSD24h: string
      volumeUSD7d: string
    }
    ProtocolQuery: {
      /**
       * @description Chart group by
       * @enum {string}
       */
      groupBy: '1D' | '1W' | '1M'
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  'postUnclaim-feesByProtocolByChainId': {
    parameters: {
      query?: never
      header?: never
      path: {
        protocol: 'pancake-v3' | 'uniswap-v3'
        chainId: '1' | '56'
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': {
          ids: string[]
        }
      }
    }
    responses: {
      /** @description Successfully batch get unclaimed fees */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            data: {
              id: string
              token0: {
                symbol: string
                amount: string
                amountUSD: string
              }
              token1: {
                symbol: string
                amount: string
                amountUSD: string
              }
              totalUSD: string
            }[]
          }
        }
      }
    }
  }
  getCachedTxV3ByChainNameSwaps: {
    parameters: {
      query?: {
        /** @description Filter by token address */
        token?: string
        /** @description Filter by pool address */
        pool?: string
        /** @description Cursor for pagination before */
        before?: string
        /** @description Cursor for pagination after */
        after?: string
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Cursor for pagination start */
            startCursor?: string
            /** @description Cursor for pagination end */
            endCursor?: string
            /** @description Has next page */
            hasNextPage?: boolean
            /** @description Has previous page */
            hasPrevPage?: boolean
            rows: {
              id: string
              transactionHash: string
              poolId: string
              token0: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
              token1: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
              amount0: string
              amount1: string
              amountUSD: string
              origin: null | string
              recipient: null | string
              timestamp: Record<string, never> | string
            }[]
          }
          'multipart/form-data': {
            /** @description Cursor for pagination start */
            startCursor?: string
            /** @description Cursor for pagination end */
            endCursor?: string
            /** @description Has next page */
            hasNextPage?: boolean
            /** @description Has previous page */
            hasPrevPage?: boolean
            rows: {
              id: string
              transactionHash: string
              poolId: string
              token0: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
              token1: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
              amount0: string
              amount1: string
              amountUSD: string
              origin: null | string
              recipient: null | string
              timestamp: Record<string, never> | string
            }[]
          }
          'text/plain': {
            /** @description Cursor for pagination start */
            startCursor?: string
            /** @description Cursor for pagination end */
            endCursor?: string
            /** @description Has next page */
            hasNextPage?: boolean
            /** @description Has previous page */
            hasPrevPage?: boolean
            rows: {
              id: string
              transactionHash: string
              poolId: string
              token0: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
              token1: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
              amount0: string
              amount1: string
              amountUSD: string
              origin: null | string
              recipient: null | string
              timestamp: Record<string, never> | string
            }[]
          }
        }
      }
    }
  }
  getCachedTxV4ByChainNameRecent: {
    parameters: {
      query?: {
        /** @description Filter by token address */
        token?: string
        /** @description Filter by pool id */
        pool?: string
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['transactionsWithType']
        }
      }
    }
  }
  getCachedTxV3ByChainNameRecent: {
    parameters: {
      query?: {
        /** @description Filter by token address */
        token?: string
        /** @description Filter by pool address */
        pool?: string
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['transactionsWithType']
        }
      }
    }
  }
  getCachedTxV2ByChainNameRecent: {
    parameters: {
      query?: {
        /** @description Filter by token address */
        token?: string
        /** @description Filter by pool address */
        pool?: string
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['transactionsWithType']
        }
      }
    }
  }
  getCachedTxStableByChainNameRecent: {
    parameters: {
      query?: {
        /** @description Filter by token address */
        token?: string
        /** @description Filter by pool address */
        pool?: string
      }
      header?: never
      path: {
        chainName: 'bsc' | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['transactionsWithType']
        }
      }
    }
  }
  getCachedTokensChartByChainNameRate: {
    parameters: {
      query: {
        /** @description Chart period */
        period: '1H' | '1D' | '1W' | '1M' | '1Y'
        /** @description Ethereum address */
        tokenA: string
        /** @description Ethereum address */
        tokenB: string
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            open: null | string
            close: null | string
            high: null | string
            low: null | string
          }[]
        }
      }
    }
  }
  getCachedTokensChartByChainNameByAddressByProtocolPrice: {
    parameters: {
      query: {
        /** @description Chart period */
        period: '1H' | '1D' | '1W' | '1M' | '1Y'
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Protocol version */
        protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            open: null | string
            close: null | string
            high: null | string
            low: null | string
          }[]
        }
      }
    }
  }
  getCachedTokensChartByChainNameByAddressPrice: {
    parameters: {
      query: {
        /** @description Chart period */
        period: '1H' | '1D' | '1W' | '1M' | '1Y'
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            open: null | string
            close: null | string
            high: null | string
            low: null | string
          }[]
        }
      }
    }
  }
  getCachedTokensChartByChainNameByAddressByProtocolVolume: {
    parameters: {
      query: {
        /** @description Chart period */
        period: '1H' | '1D' | '1W' | '1M' | '1Y'
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Protocol version */
        protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            volumeUSD: null | string
          }[]
        }
      }
    }
  }
  getCachedTokensChartByChainNameByAddressByProtocolTvl: {
    parameters: {
      query: {
        /** @description Chart period */
        period: '1H' | '1D' | '1W' | '1M' | '1Y'
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Protocol version */
        protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            tvlUSD: null | string
          }[]
        }
      }
    }
  }
  getCachedTokensChartByChainNameByAddressTvl: {
    parameters: {
      query: {
        /** @description Chart period */
        period: '1H' | '1D' | '1W' | '1M' | '1Y'
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            tvlUSD: null | string
          }[]
        }
      }
    }
  }
  getCachedTokensPriceListByIds: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description ids to query */
        ids: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  getCachedTokensByChainNameByAddressPrice: {
    parameters: {
      query?: {
        timestamp?: string | number
        /** @description Array of protocol versions */
        protocols?: ('v2' | 'v3' | 'v4bin' | 'stable') | ('v2' | 'v3' | 'v4bin' | 'stable')[]
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['TokenPrice']
        }
      }
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  getCachedTokensV3ByChainNameByAddress: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['v3TokenData']
        }
      }
    }
  }
  getCachedTokensV2ByChainNameByAddress: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['v2TokenData']
        }
      }
    }
  }
  getCachedTokensStableByChainNameByAddress: {
    parameters: {
      query?: never
      header?: never
      path: {
        chainName: 'bsc' | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['v2TokenData']
        }
      }
    }
  }
  getCachedTokensV3ByChainNameListTop: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Token address */
            id: string
            symbol: string
            name: string
            decimals: number
            totalTxCount: number
            txCount24h: number
            txCount48h: number
            txCount7d: number
            priceUSD: string
            priceUSD24h: string
            priceUSD48h: string
            priceUSD7d: string
            /** @description Total volume in USD */
            totalVolumeUSD: string
            volumeUSD24h: null | string
            volumeUSD48h: null | string
            volumeUSD7d: null | string
            tvlUSD: string
            tvlUSD24h: string
            tvlUSD48h: string
            tvlUSD7d: string
            tvl: string
            tvl24h: string
            tvl48h: string
            tvl7d: string
            totalFeeUSD: string
            feeUSD24h: string
            feeUSD48h: string
            feeUSD7d: string
          }[]
        }
      }
    }
  }
  getCachedTokensV2ByChainNameListTop: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Token address */
            id: string
            symbol: string
            name: string
            decimals: number
            totalTxCount: number
            txCount24h: number
            txCount48h: number
            txCount7d: number
            priceUSD: string
            priceUSD24h: string
            priceUSD48h: string
            priceUSD7d: string
            /** @description Total volume in USD */
            totalVolumeUSD: string
            volumeUSD24h: null | string
            volumeUSD48h: null | string
            volumeUSD7d: null | string
            tvlUSD: string
            tvlUSD24h: string
            tvlUSD48h: string
            tvlUSD7d: string
            tvl: string
            tvl24h: string
            tvl48h: string
            tvl7d: string
          }[]
        }
      }
    }
  }
  getCachedTokensStableByChainNameListTop: {
    parameters: {
      query?: never
      header?: never
      path: {
        chainName: 'bsc' | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Token address */
            id: string
            symbol: string
            name: string
            decimals: number
            totalTxCount: number
            txCount24h: number
            txCount48h: number
            txCount7d: number
            priceUSD: string
            priceUSD24h: string
            priceUSD48h: string
            priceUSD7d: string
            /** @description Total volume in USD */
            totalVolumeUSD: string
            volumeUSD24h: null | string
            volumeUSD48h: null | string
            volumeUSD7d: null | string
            tvlUSD: string
            tvlUSD24h: string
            tvlUSD48h: string
            tvlUSD7d: string
            tvl: string
            tvl24h: string
            tvl48h: string
            tvl7d: string
          }[]
        }
      }
    }
  }
  getCachedPoolsTicksV3ByChainNameByPool: {
    parameters: {
      query?: {
        /** @description Cursor for pagination before */
        before?: string
        /** @description Cursor for pagination after */
        after?: string
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Pool address */
        pool: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ticks']
        }
      }
    }
  }
  getCachedPoolsPositionsV3ByChainNameByPool: {
    parameters: {
      query?: {
        /** @description Cursor for pagination before */
        before?: string
        /** @description Cursor for pagination after */
        after?: string
        /** @description Ethereum address */
        owner?: string
        tick?: string | number
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Pool address */
        pool: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CLPositions']
        }
      }
    }
  }
  getCachedPoolsChartV3ByChainNameByAddressRate: {
    parameters: {
      query: {
        /** @description Chart period */
        period: '1H' | '1D' | '1W' | '1M' | '1Y'
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            open: null | string
            close: null | string
            high: null | string
            low: null | string
          }[]
        }
      }
    }
  }
  getCachedPoolsChartV3ByChainNameByAddressFees: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            feeUSD: string
          }[]
        }
      }
    }
  }
  getCachedPoolsChartByProtocolByChainNameByAddressTvl: {
    parameters: {
      query: {
        /** @description Chart period */
        period: '1H' | '1D' | '1W' | '1M' | '1Y'
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Protocol version */
        protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            tvlUSD: null | string
          }[]
        }
      }
    }
  }
  getCachedPoolsChartByProtocolByChainNameByAddressVolume: {
    parameters: {
      query: {
        /** @description Chart period */
        period: '1H' | '1D' | '1W' | '1M' | '1Y'
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Protocol version */
        protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            volumeUSD: null | string
          }[]
        }
      }
    }
  }
  getCachedPoolsAprV4ByChainNameById: {
    parameters: {
      query?: never
      header?: never
      path: {
        chainName: 'bsc-testnet'
        /** @description V4 pool ID */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AprSchema']
          'multipart/form-data': components['schemas']['AprSchema']
          'text/plain': components['schemas']['AprSchema']
        }
      }
    }
  }
  getCachedPoolsAprV2ByChainNameByAddress: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AprSchema']
        }
      }
    }
  }
  getCachedPoolsAprV3ByChainNameByAddress: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AprSchema']
        }
      }
    }
  }
  getCachedPoolsAprStableByChainNameByAddress: {
    parameters: {
      query?: never
      header?: never
      path: {
        chainName: 'bsc' | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            apr7d: string
            poolId: string
            virtualPrice: string
            virtualPrice7d: string
            volumeUSD7d: string
          }
        }
      }
    }
  }
  'getCachedPoolsAprV2ByChainNameFarms-lp': {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  'getCachedPoolsAprV3ByChainNameFarms-lp': {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  'getCachedPoolsAprStableByChainNameFarms-lp': {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': Record<string, never>
        }
      }
    }
  }
  getCachedPoolsByChainNameById: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Pool ID */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json':
            | {
                /** @constant */
                protocol: 'v3'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
                feeTier: number
                liquidity: string
                sqrtPrice: string
                tick: null | number
                /** @description Total fee in USD */
                totalFeeUSD: string
                /** @description Fee in USD in 24h */
                feeUSD24h: string
                /** @description Fee in USD in 24h */
                feeUSD48h: string
                /** @description Fee in USD in 7d */
                feeUSD7d: string
                /** @description Total protocol fee in USD */
                totalProtocolFeeUSD: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD24h: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD48h: string
                /** @description Protocol fee in USD in 7d */
                protocolFeeUSD7d: string
              }
            | {
                /** @constant */
                protocol: 'v4bin'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
                feeTier: number
                binStep: number
                activeId: number
                isDynamicFee: boolean
                hookId: null | string
                /** @description Total fee in USD */
                totalFeeUSD: string
                /** @description Fee in USD in 24h */
                feeUSD24h: string
                /** @description Fee in USD in 24h */
                feeUSD48h: string
                /** @description Fee in USD in 7d */
                feeUSD7d: string
                /** @description Total protocol fee in USD */
                totalProtocolFeeUSD: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD24h: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD48h: string
                /** @description Protocol fee in USD in 7d */
                protocolFeeUSD7d: string
              }
            | {
                /** @constant */
                protocol: 'v2'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
              }
            | {
                /** @constant */
                protocol: 'stable'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
                lpAddress: string
                virtualPrice: string
                virtualPrice24h: null | string
                virtualPrice48h: null | string
                virtualPrice7d: null | string
              }
          'multipart/form-data':
            | {
                /** @constant */
                protocol: 'v3'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
                feeTier: number
                liquidity: string
                sqrtPrice: string
                tick: null | number
                /** @description Total fee in USD */
                totalFeeUSD: string
                /** @description Fee in USD in 24h */
                feeUSD24h: string
                /** @description Fee in USD in 24h */
                feeUSD48h: string
                /** @description Fee in USD in 7d */
                feeUSD7d: string
                /** @description Total protocol fee in USD */
                totalProtocolFeeUSD: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD24h: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD48h: string
                /** @description Protocol fee in USD in 7d */
                protocolFeeUSD7d: string
              }
            | {
                /** @constant */
                protocol: 'v4bin'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
                feeTier: number
                binStep: number
                activeId: number
                isDynamicFee: boolean
                hookId: null | string
                /** @description Total fee in USD */
                totalFeeUSD: string
                /** @description Fee in USD in 24h */
                feeUSD24h: string
                /** @description Fee in USD in 24h */
                feeUSD48h: string
                /** @description Fee in USD in 7d */
                feeUSD7d: string
                /** @description Total protocol fee in USD */
                totalProtocolFeeUSD: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD24h: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD48h: string
                /** @description Protocol fee in USD in 7d */
                protocolFeeUSD7d: string
              }
            | {
                /** @constant */
                protocol: 'v2'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
              }
            | {
                /** @constant */
                protocol: 'stable'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
                lpAddress: string
                virtualPrice: string
                virtualPrice24h: null | string
                virtualPrice48h: null | string
                virtualPrice7d: null | string
              }
          'text/plain':
            | {
                /** @constant */
                protocol: 'v3'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
                feeTier: number
                liquidity: string
                sqrtPrice: string
                tick: null | number
                /** @description Total fee in USD */
                totalFeeUSD: string
                /** @description Fee in USD in 24h */
                feeUSD24h: string
                /** @description Fee in USD in 24h */
                feeUSD48h: string
                /** @description Fee in USD in 7d */
                feeUSD7d: string
                /** @description Total protocol fee in USD */
                totalProtocolFeeUSD: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD24h: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD48h: string
                /** @description Protocol fee in USD in 7d */
                protocolFeeUSD7d: string
              }
            | {
                /** @constant */
                protocol: 'v4bin'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
                feeTier: number
                binStep: number
                activeId: number
                isDynamicFee: boolean
                hookId: null | string
                /** @description Total fee in USD */
                totalFeeUSD: string
                /** @description Fee in USD in 24h */
                feeUSD24h: string
                /** @description Fee in USD in 24h */
                feeUSD48h: string
                /** @description Fee in USD in 7d */
                feeUSD7d: string
                /** @description Total protocol fee in USD */
                totalProtocolFeeUSD: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD24h: string
                /** @description Protocol fee in USD in 24h */
                protocolFeeUSD48h: string
                /** @description Protocol fee in USD in 7d */
                protocolFeeUSD7d: string
              }
            | {
                /** @constant */
                protocol: 'v2'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
              }
            | {
                /** @constant */
                protocol: 'stable'
                /** @description Pool id */
                id: string
                token0: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                token1: {
                  id: string
                  symbol: string
                  name: string
                  decimals: number
                }
                /** @description Total volume in USD */
                totalVolumeUSD: string
                /** @description Token0 price to token1 */
                token0Price: string
                /** @description Token1 price to token0 */
                token1Price: string
                /** @description Total value locked in token0 */
                tvlToken0: string
                /** @description Total value locked in token1 */
                tvlToken1: string
                /** @description Volume in USD in 24h */
                volumeUSD24h: string
                /** @description Volume in USD in 24h */
                volumeUSD48h: string
                /** @description Volume in USD in 7d */
                volumeUSD7d: string
                /** @description Total value locked in USD */
                tvlUSD: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD24h: string
                /** @description Total value locked in USD 24h ago */
                tvlUSD48h: string
                /** @description Total value locked in USD 7d ago */
                tvlUSD7d: string
                /** @description Pool created at timestamp */
                createdAtTimestamp: Record<string, never> | string
                lpAddress: string
                virtualPrice: string
                virtualPrice24h: null | string
                virtualPrice48h: null | string
                virtualPrice7d: null | string
              }
        }
      }
    }
  }
  getCachedPoolsList: {
    parameters: {
      query: {
        orderBy: 'tvlUSD' | 'volumeUSD24h' | 'apr24h'
        /** @description Array of protocol versions */
        protocols: ('v2' | 'v3' | 'v4bin' | 'stable') | ('v2' | 'v3' | 'v4bin' | 'stable')[]
        /** @description Array of chain names */
        chains:
          | ('bsc' | 'bsc-testnet' | 'ethereum' | 'base' | 'opbnb' | 'zksync' | 'polygon-zkevm' | 'linea' | 'arbitrum')
          | (
              | 'bsc'
              | 'bsc-testnet'
              | 'ethereum'
              | 'base'
              | 'opbnb'
              | 'zksync'
              | 'polygon-zkevm'
              | 'linea'
              | 'arbitrum'
            )[]
        /** @description Filter by pool id with chain id prefix */
        pools?: string | string[]
        /** @description Filter by tokens with chain id prefix, has higher priority than chains */
        tokens?: string | string[]
        /** @description Cursor for pagination before */
        before?: string
        /** @description Cursor for pagination after */
        after?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Cursor for pagination start */
            startCursor?: string
            /** @description Cursor for pagination end */
            endCursor?: string
            /** @description Has next page */
            hasNextPage?: boolean
            /** @description Has previous page */
            hasPrevPage?: boolean
            rows: {
              /** @description Pool id */
              id: string
              chainId: number
              token0Price: string
              token1Price: string
              tvlToken0: string
              tvlToken1: string
              tvlUSD: string
              volumeUSD24h: string
              apr24h: string
              /**
               * @description Protocol version
               * @enum {string}
               */
              protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
              feeTier: number
              token0: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
              token1: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
            }[]
          }
        }
      }
    }
  }
  getCachedPoolsFarming: {
    parameters: {
      query: {
        /** @description Array of protocol versions */
        protocols: ('v2' | 'v3' | 'v4bin' | 'stable') | ('v2' | 'v3' | 'v4bin' | 'stable')[]
        /** @description Array of chain names */
        chains:
          | ('bsc' | 'bsc-testnet' | 'ethereum' | 'base' | 'opbnb' | 'zksync' | 'polygon-zkevm' | 'linea' | 'arbitrum')
          | (
              | 'bsc'
              | 'bsc-testnet'
              | 'ethereum'
              | 'base'
              | 'opbnb'
              | 'zksync'
              | 'polygon-zkevm'
              | 'linea'
              | 'arbitrum'
            )[]
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Pool id */
            id: string
            chainId: number
            token0Price: string
            token1Price: string
            tvlToken0: string
            tvlToken1: string
            tvlUSD: string
            volumeUSD24h: string
            apr24h: string
            /**
             * @description Protocol version
             * @enum {string}
             */
            protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
            feeTier: number
            token0: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            token1: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
          }[]
        }
      }
    }
  }
  getCachedPoolsV3ByChainNameByAddress: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Pool id */
            id: string
            token0: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            token1: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            /** @description Total volume in USD */
            totalVolumeUSD: string
            /** @description Token0 price to token1 */
            token0Price: string
            /** @description Token1 price to token0 */
            token1Price: string
            /** @description Total value locked in token0 */
            tvlToken0: string
            /** @description Total value locked in token1 */
            tvlToken1: string
            /** @description Volume in USD in 24h */
            volumeUSD24h: string
            /** @description Volume in USD in 24h */
            volumeUSD48h: string
            /** @description Volume in USD in 7d */
            volumeUSD7d: string
            /** @description Total value locked in USD */
            tvlUSD: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD24h: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD48h: string
            /** @description Total value locked in USD 7d ago */
            tvlUSD7d: string
            /** @description Pool created at timestamp */
            createdAtTimestamp: Record<string, never> | string
            feeTier: number
            liquidity: string
            sqrtPrice: string
            tick: null | number
            /** @description Total fee in USD */
            totalFeeUSD: string
            /** @description Fee in USD in 24h */
            feeUSD24h: string
            /** @description Fee in USD in 24h */
            feeUSD48h: string
            /** @description Fee in USD in 7d */
            feeUSD7d: string
            /** @description Total protocol fee in USD */
            totalProtocolFeeUSD: string
            /** @description Protocol fee in USD in 24h */
            protocolFeeUSD24h: string
            /** @description Protocol fee in USD in 24h */
            protocolFeeUSD48h: string
            /** @description Protocol fee in USD in 7d */
            protocolFeeUSD7d: string
          }
        }
      }
    }
  }
  getCachedPoolsV2ByChainNameByAddress: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Pool id */
            id: string
            token0: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            token1: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            /** @description Total volume in USD */
            totalVolumeUSD: string
            /** @description Token0 price to token1 */
            token0Price: string
            /** @description Token1 price to token0 */
            token1Price: string
            /** @description Total value locked in token0 */
            tvlToken0: string
            /** @description Total value locked in token1 */
            tvlToken1: string
            /** @description Volume in USD in 24h */
            volumeUSD24h: string
            /** @description Volume in USD in 24h */
            volumeUSD48h: string
            /** @description Volume in USD in 7d */
            volumeUSD7d: string
            /** @description Total value locked in USD */
            tvlUSD: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD24h: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD48h: string
            /** @description Total value locked in USD 7d ago */
            tvlUSD7d: string
            /** @description Pool created at timestamp */
            createdAtTimestamp: Record<string, never> | string
          }
        }
      }
    }
  }
  getCachedPoolsStableByChainNameByAddress: {
    parameters: {
      query?: never
      header?: never
      path: {
        chainName: 'bsc' | 'arbitrum'
        /** @description Ethereum address */
        address: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Pool id */
            id: string
            token0: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            token1: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            /** @description Total volume in USD */
            totalVolumeUSD: string
            /** @description Token0 price to token1 */
            token0Price: string
            /** @description Token1 price to token0 */
            token1Price: string
            /** @description Total value locked in token0 */
            tvlToken0: string
            /** @description Total value locked in token1 */
            tvlToken1: string
            /** @description Volume in USD in 24h */
            volumeUSD24h: string
            /** @description Volume in USD in 24h */
            volumeUSD48h: string
            /** @description Volume in USD in 7d */
            volumeUSD7d: string
            /** @description Total value locked in USD */
            tvlUSD: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD24h: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD48h: string
            /** @description Total value locked in USD 7d ago */
            tvlUSD7d: string
            /** @description Pool created at timestamp */
            createdAtTimestamp: Record<string, never> | string
            lpAddress: string
            virtualPrice: string
            virtualPrice24h: null | string
            virtualPrice48h: null | string
            virtualPrice7d: null | string
          }
        }
      }
    }
  }
  getCachedPoolsV3ByChainNameListSimple: {
    parameters: {
      query?: {
        /** @description Filter by Token0 address */
        token0?: string
        /** @description Filter by Token1 address */
        token1?: string
        /** @description Cursor for pagination before */
        before?: string
        /** @description Cursor for pagination after */
        after?: string
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Cursor for pagination start */
            startCursor?: string
            /** @description Cursor for pagination end */
            endCursor?: string
            /** @description Has next page */
            hasNextPage?: boolean
            /** @description Has previous page */
            hasPrevPage?: boolean
            rows: {
              id: string
              feeTier: number
              token0: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
              token1: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
              totalVolumeUSD: string
              tvlUSD: string
              tvlToken0: string
              tvlToken1: string
            }[]
          }
        }
      }
    }
  }
  getCachedPoolsV3ByChainNameListTop: {
    parameters: {
      query?: {
        /** @description Filter by Token address */
        token?: string
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Pool id */
            id: string
            token0: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            token1: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            /** @description Total volume in USD */
            totalVolumeUSD: string
            /** @description Token0 price to token1 */
            token0Price: string
            /** @description Token1 price to token0 */
            token1Price: string
            /** @description Total value locked in token0 */
            tvlToken0: string
            /** @description Total value locked in token1 */
            tvlToken1: string
            /** @description Volume in USD in 24h */
            volumeUSD24h: string
            /** @description Volume in USD in 24h */
            volumeUSD48h: string
            /** @description Volume in USD in 7d */
            volumeUSD7d: string
            /** @description Total value locked in USD */
            tvlUSD: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD24h: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD48h: string
            /** @description Total value locked in USD 7d ago */
            tvlUSD7d: string
            /** @description Pool created at timestamp */
            createdAtTimestamp: Record<string, never> | string
            feeTier: number
            liquidity: string
            sqrtPrice: string
            tick: null | number
            /** @description Total fee in USD */
            totalFeeUSD: string
            /** @description Fee in USD in 24h */
            feeUSD24h: string
            /** @description Fee in USD in 24h */
            feeUSD48h: string
            /** @description Fee in USD in 7d */
            feeUSD7d: string
            /** @description Total protocol fee in USD */
            totalProtocolFeeUSD: string
            /** @description Protocol fee in USD in 24h */
            protocolFeeUSD24h: string
            /** @description Protocol fee in USD in 24h */
            protocolFeeUSD48h: string
            /** @description Protocol fee in USD in 7d */
            protocolFeeUSD7d: string
          }[]
        }
      }
    }
  }
  getCachedPoolsV2ByChainNameListTop: {
    parameters: {
      query?: {
        /** @description Filter by Token address */
        token?: string
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Pool id */
            id: string
            token0: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            token1: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            /** @description Total volume in USD */
            totalVolumeUSD: string
            /** @description Token0 price to token1 */
            token0Price: string
            /** @description Token1 price to token0 */
            token1Price: string
            /** @description Total value locked in token0 */
            tvlToken0: string
            /** @description Total value locked in token1 */
            tvlToken1: string
            /** @description Volume in USD in 24h */
            volumeUSD24h: string
            /** @description Volume in USD in 24h */
            volumeUSD48h: string
            /** @description Volume in USD in 7d */
            volumeUSD7d: string
            /** @description Total value locked in USD */
            tvlUSD: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD24h: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD48h: string
            /** @description Total value locked in USD 7d ago */
            tvlUSD7d: string
            /** @description Pool created at timestamp */
            createdAtTimestamp: Record<string, never> | string
          }[]
        }
      }
    }
  }
  getCachedPoolsStableByChainNameListTop: {
    parameters: {
      query?: {
        /** @description Filter by Token address */
        token?: string
      }
      header?: never
      path: {
        chainName: 'bsc' | 'arbitrum'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            /** @description Pool id */
            id: string
            token0: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            token1: {
              id: string
              symbol: string
              name: string
              decimals: number
            }
            /** @description Total volume in USD */
            totalVolumeUSD: string
            /** @description Token0 price to token1 */
            token0Price: string
            /** @description Token1 price to token0 */
            token1Price: string
            /** @description Total value locked in token0 */
            tvlToken0: string
            /** @description Total value locked in token1 */
            tvlToken1: string
            /** @description Volume in USD in 24h */
            volumeUSD24h: string
            /** @description Volume in USD in 24h */
            volumeUSD48h: string
            /** @description Volume in USD in 7d */
            volumeUSD7d: string
            /** @description Total value locked in USD */
            tvlUSD: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD24h: string
            /** @description Total value locked in USD 24h ago */
            tvlUSD48h: string
            /** @description Total value locked in USD 7d ago */
            tvlUSD7d: string
            /** @description Pool created at timestamp */
            createdAtTimestamp: Record<string, never> | string
            lpAddress: string
            virtualPrice: string
            virtualPrice24h: null | string
            virtualPrice48h: null | string
            virtualPrice7d: null | string
          }[]
        }
      }
    }
  }
  getCachedBlockByChainNameByTimestamp: {
    parameters: {
      query?: never
      header?: never
      path: {
        chainName: 'bsc' | 'arbitrum' | 'ethereum' | 'base' | 'opbnb' | 'zksync' | 'polygon-zkevm' | 'linea'
        timestamp: string | number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            height: number
            timestamp: number
          }
        }
      }
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': unknown
        }
      }
    }
  }
  'getCachedGaugesTotal-votesAll': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            epoch: number
            totalWeight?: string
          }[]
        }
      }
    }
  }
  getCachedProtocolChartByProtocolByChainNameVolume: {
    parameters: {
      query: {
        /** @description Chart group by */
        groupBy: '1D' | '1W' | '1M'
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Protocol version */
        protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            volumeUSD: null | string
          }[]
        }
      }
    }
  }
  getCachedProtocolChartByProtocolByChainNameTvl: {
    parameters: {
      query: {
        /** @description Chart group by */
        groupBy: '1D' | '1W' | '1M'
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Protocol version */
        protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            bucket: Record<string, never> | string
            tvlUSD: null | string
          }[]
        }
      }
    }
  }
  getCachedProtocolByProtocolByChainNameSearch: {
    parameters: {
      query: {
        text: string
      }
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Protocol version */
        protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            tokens: {
              id: string
              name: string
              symbol: string
              decimals: number
              priceUSD: string
              totalVolumeUSD: string
              tvlUSD: string
              tvl: string
              totalTxCount: number
            }[]
            pools: {
              id: string
              token0: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
              token1: {
                id: string
                symbol: string
                name: string
                decimals: number
              }
              feeTier: number
              tvlUSD: string
              totalVolumeUSD: string
              tvlToken0: string
              tvlToken1: string
            }[]
          }
        }
      }
    }
  }
  getCachedProtocolByProtocolByChainNameStats: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Protocol version */
        protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            tvlUSD: string
            totalVolumeUSD: string
            totalProtocolFeeUSD: string
            totalProtocolFeeUSD24h: string
            totalProtocolFeeUSD48h: string
            totalProtocolFeeUSD30d: string
            totalTxCount: number
            totalFeeUSD: string
            totalFeeUSD24h: string
            totalFeeUSD48h: string
            totalFeeUSD30d: string
            tvlUSD24h: string
            tvlUSD48h: string
            tvlUSD30d: string
            volumeUSD24h: string
            volumeUSD48h: string
            volumeUSD30d: string
            txCount24h: number
            txCount48h: number
            txCount30d: number
          }
        }
      }
    }
  }
  getStatusV: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getStatusThrowByProtocolByChainName: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Protocol version */
        protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            sync: boolean
            blockBehind: number
          }
          'multipart/form-data': {
            sync: boolean
            blockBehind: number
          }
          'text/plain': {
            sync: boolean
            blockBehind: number
          }
        }
      }
    }
  }
  getStatusByProtocolByChainName: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description Chain name */
        chainName:
          | 'bsc'
          | 'bsc-testnet'
          | 'ethereum'
          | 'base'
          | 'opbnb'
          | 'zksync'
          | 'polygon-zkevm'
          | 'linea'
          | 'arbitrum'
        /** @description Protocol version */
        protocol: 'v2' | 'v3' | 'v4bin' | 'stable'
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': {
            height: number
          }
          'multipart/form-data': {
            height: number
          }
          'text/plain': {
            height: number
          }
        }
      }
    }
  }
  'postWebhooksWeb-deployed': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  getDocJson: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
}
